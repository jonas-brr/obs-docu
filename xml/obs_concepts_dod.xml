<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<sect1 version="5.1" xml:id="concept-dod"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Download on Demand Repositories (DoD)</title>
 <sect2>
  <title>Motivation</title>
  <para> In a DoD repository external software repositories can be configured
   which are used for dependency resolution and where packages will be
   downloaded at build time. A DoD repository has some main advantages in
   comparison to binary import projects: </para>
  <itemizedlist>
   <listitem>
    <para> less disk usage as only really required packages will be downloaded
    </para>
   </listitem>
   <listitem>
    <para> automatic package updates when new upstream releases are available
    </para>
   </listitem>
   <listitem>
    <para> simple to configure in project meta with no for shell access to repo
     servers </para>
   </listitem>
  </itemizedlist>
  <para> In download repotypes where package checksums can be verified (e.g.
   susetags, rpmmd and deb), we recommend that you use a mirror server URL in
   &lt;download&gt; in order to reduce traffic on the master server and
   configure a &lt;master&gt; with an <command>https</command> url and a
    <command>sslfingerprint</command> in order to avoid man in the middle attacks by
   peer verification. </para>
 </sect2>
 <sect2>
  <title>XML Document Hierarchy</title>
  <screen>
&lt;project&gt;
  &lt;repository&gt;
    &lt;download&gt;
      &lt;master/&gt; (optional)
      &lt;pubkey/&gt; (optional)
    &lt;/download&gt;
  &lt;/repository&gt;
&lt;/project&gt;
      </screen>
 </sect2>
 <sect2>
  <title>The Daemon</title>
  <para> The bs_dodup daemon periodically checks for new metadata in remote
   repositories. This daemon can be enabled for startup with the command</para>
   <screen>systemctl enable obsdodup.service</screen>
   <para> and can be started with</para>
   <screen>systemctl start obsdodup.service</screen>
 </sect2>
 <sect2>
  <title>The <tag>download</tag> Element</title>
  <para>mandatory attributes:</para>
  <itemizedlist>
   <listitem>
    <para> arch </para>
   </listitem>
   <listitem>
    <para> url </para>
   </listitem>
   <listitem>
    <para> repotype </para>
   </listitem>
  </itemizedlist>
 </sect2>
 <sect2>
  <title>The <tag>master</tag> Subelement</title>
  <para> The <command>&lt;master&gt;</command> tag as shown in the rpmmd
   example below is optional but strongly recommended for security reasons. </para>
  <para> Verification is supported in the following repotypes</para> 
   <itemizedlist>
    <listitem>
     <para> susetags </para>
    </listitem>
    <listitem>
     <para> rpmmd </para>
    </listitem>
    <listitem>
     <para> deb </para>
    </listitem>
   </itemizedlist>
  <para> This option could be defined by any valid URL (HTTP and HTTPS) to the
   origin of the repository but it is strongly recommended to use
    <command>https</command> with a <command>sslfingerprint</command> to
   bs_dodup possibility to verify its peer in order to avoid man-in-the-middle
   attacks. The download URL can be a mirror as we validate package checksums
   found in repo data. </para>
  <para> You can easily query the SSL fingerprint of a remote server with the
   following command:</para>
   <screen>openssl s_client -connect &lt;host&gt;:&lt;port&gt; &lt; /dev/null 2&gt;/dev/null | openssl x509 -fingerprint -noout</screen>
 </sect2>
 <sect2>
  <title>The <tag>pubkey</tag> Subelement</title>
  <para> The pubkey element contains one or more GPG public keys in order to
   verify repository information but not packages. For an example, look at the
   repotype "deb" documentation below. </para>
 </sect2>
 <sect2>
  <title>Repository Types</title>
  <para/>
  <sect3>
   <title>YAST Sources (susetags)</title>
   <para>
    <command>Example:</command>
   </para>
   <screen>
&lt;project name="My::SuSE::CD"&gt;

  [...]

  &lt;repository name="standard"&gt;
    &lt;download arch="x86_64" url="http://mirror.example.org/path/to/iso" repotype="susetags" /&gt;
    &lt;download arch="i586" url="http://mirror.example.org/path/to/iso" repotype="susetags" /&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;arch&gt;i586&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;
        </screen>
  </sect3>
  <sect3>
   <title>RPM Sources (rpmmd)</title>
   <para>
    <command>Example:</command>
   </para>
   <screen>
&lt;project name="Fedora:Rawhide"&gt;

  [...]

  &lt;repository name="standard"&gt;
    &lt;download arch="x86_64" url="http://mirror.example.org/fedora/rawhide/x86_64/os" repotype="rpmmd"&gt;
      &lt;master url="https://master.example.org/whereever/fedora/rawhide/x86_64/os" sslfingerprint="sha256:0a64..0303"/&gt;
    &lt;/download&gt;
    &lt;download arch="i586" url="http://mirror.example.org/fedora/rawhide/i386/os" repotype="rpmmd"&gt;
      &lt;master url="https://master.example.org/whereever/fedora/rawhide/i386/os" sslfingerprint="sha256:0a64..0303"/&gt;
    &lt;/download&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;arch&gt;i586&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;</screen>

  </sect3>
  <sect3>
   <title>Apt Repository (deb)</title>
   <para> Apt supports two repository types, flat repositories and distribution
    repositories. </para>
   <para> The download url syntax for them is: </para>
   <itemizedlist>
    <listitem>
     <para> &lt;baseurl&gt;/&lt;distribution&gt;/&lt;components&gt; </para>
    </listitem>
    <listitem>
     <para> &lt;flat_url&gt;/.[/&lt;components&gt;] </para>
    </listitem>
   </itemizedlist>
   <para> You can specify multiple components separated by a comma. </para>
   <para> An empty components string is parsed as "main". </para>
   <para>
    <command>Example:</command>
   </para>
   <screen>
&lt;project name="Debian:8"&gt;

  [...]

  &lt;repository name="ga"&gt;
    &lt;download arch="x86_64" url="http://ftp.de.debian.org/debian/jessie/main" repotype="deb"&gt;
      &lt;pubkey&gt;
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.12 (GNU/Linux)

[...]

      &lt;/pubkey&gt;
    &lt;/download&gt;
    &lt;download arch="i586" url="http://ftp.de.debian.org/debian/jessie/main" repotype="deb"&gt;
      &lt;pubkey&gt;
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: GnuPG v1.4.12 (GNU/Linux)

[...]

      &lt;/pubkey&gt;
    &lt;/download&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;arch&gt;i586&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;
        </screen>
  </sect3>
  <sect3>
   <title>Arch Repository (arch)</title>
   <para> Be aware that there is currently no way to verify the origin of
    repository for Arch. </para>
   <para>
    <command>Example:</command>
   </para>
   <screen>
&lt;project name="Arch:Core"&gt;

  [...]

  &lt;repository name="standard"&gt;
    &lt;download arch="x86_64" url="http://ftp5.gwdg.de/pub/linux/archlinux/core/os/x86_64" repotype="arch"/&gt;
    &lt;download arch="i586" url="http://ftp5.gwdg.de/pub/linux/archlinux/core/os/i686" repotype="arch"/&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;arch&gt;i586&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;
        </screen>
  </sect3>
  <sect3>
   <title>Mandriva Repository (mdk)</title>
   <para>
    <command>Example:</command>
   </para>
   <screen>
&lt;project name="Mageia:5"&gt;

  [...]

  &lt;repository name="standard"&gt;
    &lt;download arch="x86_64" url="http://mirror.example.org/Mageia/distrib/5/x86_64/media/core/release" repotype="mdk"/&gt;
    &lt;download arch="i586" url="http://mirror.example.org/mirrors/Mageia/distrib/5/i586/media/core/release" repotype="mdk"/&gt;
    &lt;arch&gt;x86_64&lt;/arch&gt;
    &lt;arch&gt;i586&lt;/arch&gt;
  &lt;/repository&gt;
&lt;/project&gt;
        </screen>
  </sect3>
 </sect2>
</sect1>
