<!DOCTYPE sect1
[
  <!ENTITY % entities SYSTEM "entity-decl.ent">
    %entities;
]>
<sect1 version="5.1" xml:id="cha-obs-admin-backend"
 xmlns="http://docbook.org/ns/docbook"
 xmlns:xi="http://www.w3.org/2001/XInclude"
 xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Back-end Administration</title>
 <para/>
 <sect2>
  <title>Services</title>
  <para> You can control the different back-end components via
    <command>systemctl</command>. You can enable/disable the service
   during booting the system and start/stop/restart it in a running system.
   For more information, see <link
    xlink:href="https://www.freedesktop.org/software/systemd/man/systemctl.html#Commands"
    >man page</link>. For example, to restart the
   repository server, use:</para>
   <screen><command>systemctl restart obsrepserver.service</command></screen>
  <table xml:id="tab.obs.service-names">
   <title>Service Names</title>
   <tgroup cols="2" align="left">
    <thead>
     <row>
      <entry>Component</entry>
      <entry>Service Name</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry> Source Server </entry>
      <entry> obssrcserver.service </entry>
     </row>
     <row>
      <entry> Repository Server </entry>
      <entry> obsrepserver.service </entry>
     </row>
     <row>
      <entry> Scheduler </entry>
      <entry> obsscheduler.service </entry>
     </row>
     <row>
      <entry> Dispatcher </entry>
      <entry> obsdispatcher.service </entry>
     </row>
     <row>
      <entry> Publisher </entry>
      <entry> obspublisher.service </entry>
     </row>
     <row>
      <entry> Source Publisher </entry>
      <entry> obssourcepublish.service </entry>
     </row>
     <row>
      <entry> Worker </entry>
      <entry> obsworker.service </entry>
     </row>
     <row>
      <entry> Source Services </entry>
      <entry> obsservice.service </entry>
     </row>
     <row>
      <entry> Download On Demand Repository Meta Data Updates </entry>
      <entry> obsdodup.service </entry>
     </row>
     <row>
      <entry> Delta Storage </entry>
      <entry> obsdeltastore.service </entry>
     </row>
     <row>
      <entry> Signer </entry>
      <entry> obssigner.service </entry>
     </row>
     <row>
      <entry> Warden </entry>
      <entry> obswarden.service </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </sect2>
 <sect2>
  <title>Advanced Setups</title>
  <para> It makes sense to run some of the different components of the OBS
   back-end on isolated hosts. </para>
  <sect3>
   <title>Distributed Workers</title>
   <para> OBS workers can be very resource hungry. It all depends on the
    software that is being built, and how. Single builds deep down in the
    dependency chain can also trigger a sea of jobs. It makes sense to split
    off workers from all the other services so they do not have to fight for
    the same operating system/hardware resources. Here is an example on how to
    setup a remote OBS worker. </para>
   <orderedlist>
    <listitem>
     <para> Install the worker package called obs-worker </para>
    </listitem>
    <listitem>
     <para> Configure the OBS repository server address in the file
      /etc/sysconfig/obs-server. Change the variable OBS_REPO_SERVERS to the
      host name of the machine on which the repository server is running:
      OBS_REPO_SERVERS="myreposerver.example:5252" </para>
    </listitem>
    <listitem>
     <para> Start the worker </para>
    </listitem>
   </orderedlist>
  </sect3>
  <sect3 condition="tbd">
   <title>Distributed Source Services</title>
   <para/>
   <remark>TBD</remark>
  </sect3>
  <sect3 condition="tbd">
   <title>Isolated Signer</title>
   <para/>
   <remark>TBD</remark>
  </sect3>
  <sect3 condition="tbd">
   <title>Repository Partitions</title>
   <para/>
   <remark>TBD</remark>
  </sect3>
 </sect2>
</sect1>
